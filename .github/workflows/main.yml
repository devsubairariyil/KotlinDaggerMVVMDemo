# .github/workflows/main.yml

name: My CI/CD Workflow

on:
  push:
    branches:
      - '*' # Run on every push to any branch
  pull_request:

jobs:
  strategy_job:
    name: Create Strategy Config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug Feature Folder Contents
        run: |
          echo "Checking contents of the feature folder..."
          ls ${{ inputs.feature_folder }}

      - name: Create JSON files
        run: |
          # Get the list of feature files into an array
          files=()
          while IFS= read -r -d '' file; do
            files+=("$file")
          done < <(find ${{ inputs.feature_folder }} -type f -name "*.feature" -print0)

          # Calculate the number of strategies (5 or 3) based on the total file count
          total_files=${#files[@]}
          if [[ $total_files -gt 10 ]]; then
            strategies=5
          elif [[ $total_files -gt 3 ]]; then
            strategies=3
          else
            strategies=1
          fi

          # Calculate the number of files for each strategy and the remaining files
          files_per_strategy=$(( total_files / strategies ))
          remaining_files=$(( total_files % strategies ))

          # Increment max_files_per_strategy by 1 if the remainder is greater than 0
          if [[ $remaining_files -gt 0 ]]; then
            max_files_per_strategy=$(( files_per_strategy + 1 ))
          else
            max_files_per_strategy=$files_per_strategy
          fi

          # Construct the JSON output with the strategies
          json="{"

          # Include the devices block if devices are provided or use a default value
          if [ -n "${{ inputs.device_list }}" ]; then
            json+="\"devices\": [${{ inputs.device_list }}], "
          else
            json+="\"devices\": [\"device1\", \"device2\"], "  # Default device list
          fi

          # Add additional keys outside the shard block
          json+="\"project\": \"${{ inputs.project }}\", "
          json+="\"custom_id\": \"${{ inputs.custom_id }}\", "
          json+="\"locale\": \"en-GB\", "

          json+="\"mapping\": ["

          # Create and allocate files to the strategies using Round Robin logic
          for (( i = 0; i < strategies; i++ )); do
            strategy_files=()
            for (( j = i; j < total_files; j += strategies )); do
              strategy_files+=("\"${files[j]}\"")
            done

            # Join strategy_files array into a comma-separated string
            files_string=$(IFS=, ; echo "${strategy_files[*]}")

            # Create the strategy object
            strategy_object="{\"name\": \"Shard $((i+1))\", \"strategy\": \"Cucumber\", \"values\": {\"features\": [$files_string]}}"

            # Append the strategy object to the JSON output
            json+="$strategy_object"

            # Add a comma after each strategy except the last one
            if (( i < strategies - 1 )); then
              json+=", "
            fi
          done

          json+="], "

          json+="\"numberOfShard\": $strategies, "  # Number of strategies
          json+="\"deviceSelection\": \"any\""   # Device selection

          json+="}"

          # Save JSON to a file named config.json in the .github folder
          echo "$json" > .github/config.json

      - name: Show Config JSON
        run: cat .github/config.json
